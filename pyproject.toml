[project]
name = "dehancer-cli"
dynamic = ["version"]
description = "Unofficial command line application that interacts with the Dehancer Online API"
authors = [{name="Denis Sharov"}]
readme = "README.md"
license = "MIT"

requires-python = ">=3.12"
dependencies = [
   "click == 8.2.1",
   "pyyaml == 6.0.2",
   "requests == 2.32.4",
   "requests-toolbelt == 1.0.0",
   "certifi == 2025.8.3",
   "urllib3 == 2.5.0",
   "zipp == 3.23.0",
   "puremagic == 1.30",
   "cryptography == 45.0.6",
   "diskcache == 5.6.3",
   "rjsmin == 1.2.4",
   "pyperclip == 1.9.0"
]

[project.optional-dependencies]
dev = [
   "ruff == 0.12.9",
   "pytest == 8.4.1",
   "pytest-cov == 6.2.1",
   "anybadge == 1.16.0",
   "weasyprint == 66.0",
   "markdown2 == 2.5.4",
   "nuitka == 2.6.9",
   "poetry-core == 2.1.3",
   "poetry-dynamic-versioning == 1.9.1",
   "poetry-plugin-export == 1.9.0"
]

[project.scripts]
dehancer-cli = "dehancer_cli:cli"

[tool.poetry]
version = "0.0.0" # The version will be dynamically installed below

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.from-file]
source = "src//__init__.py"
pattern = "app_version\\s*=\\s*\"(.*?)\""

[tool.ruff]
line-length = 120
exclude = [
   ".git",
   "__pycache__",
   "env",
   ".env",
   "venv",
   ".venv",
   "build",
   "dist"
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
   "D100",     # Missing docstring in public module
   "D104",     # Missing docstring in public package
   "D107",     # Missing docstring in `__init__`
   "D203",     # 1 blank line required before class docstring
   "D212",     # Multi-line docstring summary should start at the first line
   "PTH118",   # `os.path.join()` should be replaced by `Path` with `/` operator
   "TD002",    # Missing author in TODO
   "TD003",    # Missing issue link on the line following this TODO
]

[tool.ruff.lint.per-file-ignores]
# Rules that not appicable for tests:
"tests/**/*.py" = [
   "ANN201",   # Missing return type annotation for public function
   "D103",     # Missing docstring in public function
   "S101",     # Use of `assert` detected
   "PT023",    # Use `@pytest.mark.x()` over `@pytest.mark.x`
]

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"