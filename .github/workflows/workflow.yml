name: Dehancer-CLI's pipeline
on: push
jobs:
  Check-code-style-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run linter and code formatter
        run: |
          ruff check . --output-format=github
        continue-on-error: true
  Run-unit-tests:
    needs: [ Check-code-style-and-format ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests with coverage calculation
        run: |
          pytest_output=$(pytest --cov=src/ -m "unit" || true)
          echo $pytest_output
          total_coverage=$(echo "$pytest_output" | grep 'TOTAL' | awk '{print $NF}' | sed 's/%//')
          printf "Total unit test coverage is %s%%\n" "$total_coverage"
          mkdir -p badges/unit
          anybadge --value=$total_coverage --file=badges/unit/unit-test-coverage.svg coverage
      - name: Publish coverage badge to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: badges/unit
  Run-e2e-tests:
    needs: [ Check-code-style-and-format ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run e2e tests
        run: |
          pytest -m "e2e"
  Check-for-vulnerabilities:
    needs: [ Run-unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Snyk to check for vulnerabilities
        id: snyk
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
      - name: Check Snyk result and make a badge
        run: |
          if [ "${{ steps.snyk.outcome }}" == "success" ]; then
            badge_color="green"
          else
            badge_color="red"
          fi
          mkdir -p badges/snyk
          anybadge --label "vulnerabilities | snyk" --value=tested --file=badges/snyk/vulnerabilities-snyk-result.svg tested=$badge_color
      - name: Publish snyk result badge to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: badges/snyk